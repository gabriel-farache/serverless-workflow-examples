/*
 * Move2Kube API
 * This is a documentation of the Move2Kube REST API. All API calls expect the `Authorization: Bearer <access-token>` HTTP header unless specified otherwise. The access token can be obtained in the same way as OAuth 2.0 using the token endpoint in the admin section. 
 *
 * The version of the OpenAPI document: v1.0.0
 * Contact: move2kube-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.parodos.move2kube.api;

import dev.parodos.move2kube.ApiException;
import dev.parodos.move2kube.client.model.Error;
import java.io.File;
import dev.parodos.move2kube.client.model.StartTransformation202Response;
import dev.parodos.move2kube.client.model.StartTransformationRequest;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectOutputsApi
 */
@Ignore
public class ProjectOutputsApiTest {

    private final ProjectOutputsApi api = new ProjectOutputsApi();

    /**
     * Delete the output of the project.
     *
     * Delete the output of the project.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProjectOutputTest() throws ApiException {
        String workspaceId = null;
        String projectId = null;
        String outputId = null;
        api.deleteProjectOutput(workspaceId, projectId, outputId);

        // TODO: test validations
    }
    /**
     * Get the output of the project with the given ID.
     *
     * Get the output of the project with the given ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProjectOutputTest() throws ApiException {
        String workspaceId = null;
        String projectId = null;
        String outputId = null;
        File response = api.getProjectOutput(workspaceId, projectId, outputId);

        // TODO: test validations
    }
    /**
     * Start transformation for this project. Planning must be completed before this.
     *
     * Start transformation for this project. Planning must be completed before this.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startTransformationTest() throws ApiException {
        String workspaceId = null;
        String projectId = null;
        StartTransformationRequest body = null;
        StartTransformation202Response response = api.startTransformation(workspaceId, projectId, body);

        // TODO: test validations
    }
}
