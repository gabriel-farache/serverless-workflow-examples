openapi: 3.0.1
info:
  contact:
    email: move2kube-dev@googlegroups.com
  description: |
    This is a documentation of the Move2Kube REST API.
    All API calls expect the `Authorization: Bearer <access-token>` HTTP header unless specified otherwise.
    The access token can be obtained in the same way as OAuth 2.0 using the token endpoint in the admin section.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Move2Kube API
  version: v1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /api/v1
security:
- bearerAuth: []
tags:
- description: Helps migrate your app to Kubernetes.
  externalDocs:
    description: Find out more
    url: https://move2kube.konveyor.io/
  name: move2kube
paths:
  /token:
    post:
      description: Get an access token using client ID and client secret (for use
        with trusted clients).
      operationId: get-tokens
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/get_tokens_request'
        description: "Use `grant_type=client_credentials` in the body and set the\
          \ header  \n`Authorization: Basic base64(client_id + \":\" + client_secret)`\n"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_tokens_200_response'
          description: The access token.
          headers:
            Cache-Control:
              explode: false
              schema:
                enum:
                - no-store
                type: string
              style: simple
            Pragma:
              explode: false
              schema:
                enum:
                - no-cache
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get the access token.
      security:
      - basicAuth: []
      summary: Get an access token using client ID and client secret (for use with
        trusted clients).
      tags:
      - admin
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /support:
    get:
      description: "Returns some support information like CLI, API and UI version\
        \ info."
      operationId: get-support-info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_support_info_200_response'
          description: Success.
      summary: "Returns some support information like CLI, API and UI version info."
      tags:
      - support
      x-accepts: application/json
  /workspaces:
    get:
      description: Get all the workspaces you have access to.
      operationId: get-workspaces
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Workspace'
                type: array
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get all the workspaces.
      summary: Get all the workspaces you have access to.
      tags:
      - workspaces
      x-accepts: application/json
    post:
      description: Create a new workspace. The ID will be generated by the server.
      operationId: create-workspace
      requestBody:
        content:
          application/json:
            example:
              name: Team 1 Workspace
              description: The workspace team 1 uses.
            schema:
              $ref: '#/components/schemas/Workspace'
        description: |
          The metadata of the workspace.
          Leave the ID blank, it will be generated.
          Leave the projects blank, projects are managed through a different set of endpoints.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_workspace_201_response'
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create a new workspace.
      summary: Create a new workspace. The ID will be generated by the server.
      tags:
      - workspaces
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /workspaces/{workspace-id}:
    delete:
      description: Delete an existing workspace.
      operationId: delete-workspace
      parameters:
      - description: ID of the workspace to delete.
        example: work-1
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to delete this workspace.
        "404":
          description: Workspace not found.
      summary: Delete an existing workspace.
      tags:
      - workspaces
      x-accepts: application/json
    get:
      description: Get the workspace with the given ID.
      operationId: get-workspace
      parameters:
      - description: ID of the workspace to get.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this workspace.
        "404":
          description: Workspace not found.
      summary: Get the workspace with the given ID.
      tags:
      - workspaces
      x-accepts: application/json
    put:
      description: Update a workspace. The workspace will be created if it doesn't
        exist.
      operationId: update-workspace
      parameters:
      - description: ID of the workspace to update.
        example: work-1
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Team 1 Workspace. Update Name.
              description: The workspace team 1 uses. Updated description.
            schema:
              $ref: '#/components/schemas/Workspace'
        description: |
          The metadata of the workspace.
          Leave the ID blank, it will be generated.
          Leave the projects blank, projects are managed through a different set of endpoints.
        required: true
      responses:
        "201":
          description: Created.
        "204":
          description: Updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create/update this workspace.
        "404":
          description: Workspace not found.
      summary: Update a workspace. The workspace will be created if it doesn't exist.
      tags:
      - workspaces
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /workspaces/{workspace-id}/inputs:
    post:
      description: Create a new input for this workspace. All the projects in this
        workspace will be able to use it. The ID will be generated by the server.
      operationId: create-workspace-input
      parameters:
      - description: ID of the workspace to create the input in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/create_workspace_input_request'
        description: |
          The metadata of the workspace input.
          Leave the ID blank, it will be generated.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_workspace_input_201_response'
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create an input for this project.
      summary: Create a new input for this workspace. All the projects in this workspace
        will be able to use it. The ID will be generated by the server.
      tags:
      - workspace-inputs
      x-codegen-request-body-name: body
      x-content-type: multipart/form-data
      x-accepts: application/json
  /workspaces/{workspace-id}/inputs/{input-id}:
    delete:
      description: Delete the input of the project.
      operationId: delete-workspace-input
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the input to delete.
        example: work-input-1234
        explode: false
        in: path
        name: input-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to delete this project input.
        "404":
          description: "Workspace, project or input not found."
      summary: Delete the input of the project.
      tags:
      - workspace-inputs
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Get the input of the project with the given ID.
      operationId: get-workspace-input
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the input to get.
        example: work-input-1234
        explode: false
        in: path
        name: input-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this project input.
        "404":
          description: "Workspace, project or input not found."
      summary: Get the input of the project with the given ID.
      tags:
      - workspace-inputs
      x-accepts: application/octet-stream
  /workspaces/{workspace-id}/projects:
    get:
      description: Get all the projects you have access to in this workspace.
      operationId: get-projects
      parameters:
      - description: ID of the workspace to get the projects from.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get all the projects in this workspace.
      summary: Get all the projects you have access to in this workspace.
      tags:
      - projects
      x-accepts: application/json
    post:
      description: Create a new project in this workspace. The ID will be generated
        by the server.
      operationId: create-project
      parameters:
      - description: ID of the workspace to create the project in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: My Web App 1
              description: Project to transform my web app 1 to run on K8s.
            schema:
              $ref: '#/components/schemas/Project'
        description: |
          The metadata of the project.
          Leave the ID blank, it will be generated.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_project_201_response'
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create a new project in this workspace.
      summary: Create a new project in this workspace. The ID will be generated by
        the server.
      tags:
      - projects
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /workspaces/{workspace-id}/projects/{project-id}:
    delete:
      description: Delete an existing workspace.
      operationId: delete-project
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to delete.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to delete this project.
        "404":
          description: Workspace or project not found.
      summary: Delete an existing workspace.
      tags:
      - projects
      x-accepts: application/json
    get:
      description: Get the project with the given ID.
      operationId: get-project
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to get.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this project.
        "404":
          description: Workspace or project not found.
      summary: Get the project with the given ID.
      tags:
      - projects
      x-accepts: application/json
    put:
      description: Update a project. The project will be created if it doesn't exist.
      operationId: update-project
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to update.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: My Web App 1. Updated Name.
              description: Project to transform my web app 1. Updated description.
            schema:
              $ref: '#/components/schemas/Project'
        description: |
          The metadata of the project.
          Leave the ID blank.
        required: true
      responses:
        "201":
          description: Created.
        "204":
          description: Updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create/update this project.
        "404":
          description: Workspace or project not found.
      summary: Update a project. The project will be created if it doesn't exist.
      tags:
      - projects
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /workspaces/{workspace-id}/projects/{project-id}/inputs:
    post:
      description: Create a new input for this project. The ID will be generated by
        the server.
      operationId: create-project-input
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to create the input in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/create_project_input_request'
        description: |
          The metadata of the project input.
          Leave the ID blank, it will be generated.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_project_input_201_response'
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create an input for this project.
      summary: Create a new input for this project. The ID will be generated by the
        server.
      tags:
      - project-inputs
      x-codegen-request-body-name: body
      x-content-type: multipart/form-data
      x-accepts: application/json
  /workspaces/{workspace-id}/projects/{project-id}/inputs/{input-id}:
    delete:
      description: Delete the input of the project.
      operationId: delete-project-input
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project the input is in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the input to delete.
        example: proj-input-1234
        explode: false
        in: path
        name: input-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to delete this project input.
        "404":
          description: "Workspace, project or input not found."
      summary: Delete the input of the project.
      tags:
      - project-inputs
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Get the input of the project with the given ID.
      operationId: get-project-input
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project the input is in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the input to get.
        example: proj-input-1234
        explode: false
        in: path
        name: input-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this project input.
        "404":
          description: "Workspace, project or input not found."
      summary: Get the input of the project with the given ID.
      tags:
      - project-inputs
      x-accepts: application/octet-stream
  /workspaces/{workspace-id}/projects/{project-id}/plan:
    delete:
      description: Delete the current plan for the project.
      operationId: delete-plan
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to delete the plan from.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to delete the plan for this project.
        "404":
          description: Workspace or project not found.
      summary: Delete the current plan for the project.
      tags:
      - plan
      x-accepts: application/json
    get:
      description: Get the plan file.
      operationId: get-plan
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to get the plan from.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_plan_200_response'
          description: Accepted.
        "400":
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to start planning for this project.
        "404":
          description: Workspace or project not found.
        "409":
          description: "Conflict, because planning is already on-going for this project."
      summary: Get the plan file.
      tags:
      - plan
      x-codegen-request-body-name: body
      x-accepts: application/json
    post:
      description: Start planning on this project's inputs.
      operationId: start-planning
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to start planning in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "202":
          description: Accepted.
        "400":
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to start planning for this project.
        "404":
          description: Workspace or project not found.
      summary: Start planning on this project's inputs.
      tags:
      - plan
      x-codegen-request-body-name: body
      x-accepts: application/json
    put:
      description: Update the plan for this project.
      operationId: update-plan
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to update the plan for.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_plan_request'
        required: true
      responses:
        "204":
          description: Accepted.
        "400":
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to update the plan for this project.
        "404":
          description: Workspace or project not found.
      summary: Update the plan for this project.
      tags:
      - plan
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /workspaces/{workspace-id}/projects/{project-id}/outputs:
    post:
      description: Start transformation for this project. Planning must be completed
        before this.
      operationId: start-transformation
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to start the transformation for.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/start_transformation_request'
        description: |
          A plan to use for the transformation. (Not required).
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/start_transformation_202_response'
          description: Accept
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to start transformation for this project.
        "404":
          description: Workspace or project not found.
      summary: Start transformation for this project. Planning must be completed before
        this.
      tags:
      - project-outputs
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /workspaces/{workspace-id}/projects/{project-id}/outputs/{output-id}:
    delete:
      description: Delete the output of the project.
      operationId: delete-project-output
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project the output is in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the output to delete.
        example: proj-output-1234
        explode: false
        in: path
        name: output-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to delete this project output.
        "404":
          description: "Workspace, project or output not found."
      summary: Delete the output of the project.
      tags:
      - project-outputs
      x-codegen-request-body-name: body
      x-accepts: application/json
    get:
      description: Get the output of the project with the given ID.
      operationId: get-project-output
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project the output is in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the output to get.
        example: proj-output-1234
        explode: false
        in: path
        name: output-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Success.
        "204":
          description: The transformation is still on-going.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this project output.
        "404":
          description: "Workspace, project or output not found."
      summary: Get the output of the project with the given ID.
      tags:
      - project-outputs
      x-accepts: application/octet-stream
  /workspaces/{workspace-id}/projects/{project-id}/outputs/{output-id}/graph:
    get:
      description: Get the graph of the transformers used while creating the output
        with the given ID.
      operationId: get-project-output-graph
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project the output is in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the output whose graph we should get.
        example: proj-output-1234
        explode: false
        in: path
        name: output-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success.
        "204":
          description: The transformation is still on-going.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this project output.
        "404":
          description: "Workspace, project or output not found."
      summary: Get the graph of the transformers used while creating the output with
        the given ID.
      tags:
      - project-output-graphs
      x-accepts: application/json
  /workspaces/{workspace-id}/projects/{project-id}/outputs/{output-id}/problems/current:
    get:
      description: Get the current question that needs to be answered for the transformation
        to proceed.
      operationId: get-current-question
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project the output is in.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the output whose transformation is on-going.
        example: proj-output-1234
        explode: false
        in: path
        name: output-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_current_question_200_response'
          description: Success.
        "204":
          description: All questions have finished.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this project output.
        "404":
          description: "Workspace, project or output not found. Might also be returned\
            \ once the transformation has finished."
      summary: Get the current question that needs to be answered for the transformation
        to proceed.
      tags:
      - qa
      x-accepts: application/json
  /workspaces/{workspace-id}/projects/{project-id}/outputs/{output-id}/problems/current/solution:
    post:
      description: Post the answer to the current question for an on-going transformation
        given by the ID.
      operationId: post-answer-to-question
      parameters:
      - description: ID of the workspace the project is in.
        example: work-1234
        explode: false
        in: path
        name: workspace-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the project to start the transformation for.
        example: proj-1234
        explode: false
        in: path
        name: project-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the output whose transformation is on-going.
        example: proj-output-1234
        explode: false
        in: path
        name: output-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_answer_to_question_request'
        description: |
          A plan to use for the transformation. (Not required).
        required: true
      responses:
        "204":
          description: Answer was accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to post an answer to the question
            for this project output.
        "404":
          description: "Workspace, project, or output not found."
      summary: Post the answer to the current question for an on-going transformation
        given by the ID.
      tags:
      - qa
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /roles:
    get:
      description: Get all the roles.
      operationId: get-roles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get all the roles.
      summary: Get all the roles.
      tags:
      - roles
      x-accepts: application/json
    post:
      description: Create a new role.
      operationId: create-role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: "The metadata of the role. Leave the ID blank, it will be generated."
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_role_201_response'
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create a new role.
      summary: Create a new role.
      tags:
      - roles
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /roles/{role-id}:
    delete:
      description: Delete an existing role.
      operationId: delete-role
      parameters:
      - description: ID of the role to delete.
        example: team-1
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to delete this role.
        "404":
          description: Role not found.
      summary: Delete an existing role
      tags:
      - roles
      x-accepts: application/json
    get:
      description: Get the role with the given ID.
      operationId: get-role
      parameters:
      - description: ID of the role to get.
        example: team-7
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get this role.
        "404":
          description: Role not found.
      summary: Get the role with the given ID.
      tags:
      - roles
      x-accepts: application/json
    put:
      description: Update a role. The role will be created if it doesn't exist.
      operationId: update-role
      parameters:
      - description: ID of the role to update.
        example: team-1
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: The metadata of the role.
        required: true
      responses:
        "201":
          description: Created.
        "204":
          description: Updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to create/update this role.
        "404":
          description: Role not found.
      summary: Update a role. The role will be created if it doesn't exist.
      tags:
      - roles
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /idps/{idp-id}/users/{user-id}/roles:
    get:
      description: Get all the roles for the given user.
      operationId: get-roles-of-user
      parameters:
      - description: ID of the identity provider.
        example: idp-1
        explode: false
        in: path
        name: idp-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the user as given by the identity provider.
        example: user-1
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of role IDs assigned to the user.
                example:
                - role-1
                - role-2
                items:
                  type: string
                type: array
          description: Success.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to get the roles for this user.
        "404":
          description: User not found.
      summary: Get all the roles for the given user.
      tags:
      - role-bindings
      x-accepts: application/json
    patch:
      description: Update the roles of the given user.
      operationId: update-roles-of-user
      parameters:
      - description: ID of the identity provider.
        example: idp-1
        explode: false
        in: path
        name: idp-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the user as given by the identity provider.
        example: user-1
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              properties:
                op:
                  description: "add: add these roles to the existing roles the user\
                    \ has.  \nremove: remove these roles from the existing roles the\
                    \ user has.  \noverwrite: completely overwrite the existing roles\
                    \ the user has with these roles.\n"
                  enum:
                  - add
                  - remove
                  - overwrite
                  type: string
                roles:
                  description: List of role IDs
                  example:
                  - role-1
                  - role-2
                  items:
                    type: string
                  type: array
              type: array
        description: "Add, remove or overwrite the roles of the user."
        required: true
      responses:
        "204":
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid format or validation error.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to update the roles for this user.
        "404":
          description: User not found.
      summary: Update the roles of the given user.
      tags:
      - role-bindings
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /idps/{idp-id}/users/{user-id}/roles/{role-id}:
    delete:
      description: Remove a role from a user.
      operationId: remove-role-from-user
      parameters:
      - description: ID of the identity provider.
        example: idp-1
        explode: false
        in: path
        name: idp-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the user as given by the identity provider.
        example: user-1
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the role to remove from the user.
        example: team-7
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "204":
          description: Deleted.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to remove this role from this user.
        "404":
          description: User not found.
      summary: Remove a role from a user.
      tags:
      - role-bindings
      x-accepts: application/json
    put:
      description: Add a role to a user.
      operationId: add-role-to-user
      parameters:
      - description: ID of the identity provider.
        example: idp-1
        explode: false
        in: path
        name: idp-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - description: ID of the user as given by the identity provider.
        example: user-1
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the role to add to the user.
        example: team-7
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "201":
          description: Created.
        "401":
          description: Authorization header is missing or invalid.
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: Don't have authorization to add this role to this user.
        "404":
          description: User not found.
      summary: Add a role to a user.
      tags:
      - role-bindings
      x-accepts: application/json
components:
  responses:
    UnauthorizedError:
      description: Authorization header is missing or invalid.
      headers:
        WWW_Authenticate:
          explode: false
          schema:
            type: string
          style: simple
    Token:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/get_tokens_200_response'
      description: The access token.
      headers:
        Cache-Control:
          explode: false
          schema:
            enum:
            - no-store
            type: string
          style: simple
        Pragma:
          explode: false
          schema:
            enum:
            - no-cache
            type: string
          style: simple
  schemas:
    ID:
      description: A unique ID.
      example: id-1234
      pattern: "^[a-zA-Z0-9-_]+$"
      type: string
    Error:
      properties:
        error:
          $ref: '#/components/schemas/Error_error'
      required:
      - error
      type: object
    Project:
      example:
        outputs:
          key:
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            timestamp: 2000-01-23T04:56:07.000+00:00
            status: status
        inputs:
          key:
            name: name
            description: description
            normalized_name: normalized_name
            id: id
            type: type
            timestamp: 2000-01-23T04:56:07.000+00:00
        name: Project 23
        description: This is one of the projects that team 1 is working on.
        id: proj-1234
        timestamp: 2000-01-23T04:56:07.000+00:00
        status:
          reference: true
          outputs: true
          planning: true
          plan_error: true
          stale_plan: true
          sources: true
          plan: true
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: A unique ID for the project.
          example: proj-1234
          type: object
        name:
          description: A human readable name for the project.
          example: Project 23
          type: string
        timestamp:
          format: date-time
          type: string
        outputs:
          additionalProperties:
            $ref: '#/components/schemas/Project_outputs_value'
          type: object
        status:
          $ref: '#/components/schemas/Project_status'
        inputs:
          additionalProperties:
            $ref: '#/components/schemas/Project_inputs_value'
          type: object
        description:
          description: A description about the project.
          example: This is one of the projects that team 1 is working on.
          type: string
      required:
      - id
      - name
      type: object
    Workspace:
      example:
        projects:
        - outputs:
            key:
              name: name
              description: description
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              timestamp: 2000-01-23T04:56:07.000+00:00
              status: status
          inputs:
            key:
              name: name
              description: description
              normalized_name: normalized_name
              id: id
              type: type
              timestamp: 2000-01-23T04:56:07.000+00:00
          name: Project 23
          description: This is one of the projects that team 1 is working on.
          id: proj-1234
          timestamp: 2000-01-23T04:56:07.000+00:00
          status:
            reference: true
            outputs: true
            planning: true
            plan_error: true
            stale_plan: true
            sources: true
            plan: true
        - outputs:
            key:
              name: name
              description: description
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              timestamp: 2000-01-23T04:56:07.000+00:00
              status: status
          inputs:
            key:
              name: name
              description: description
              normalized_name: normalized_name
              id: id
              type: type
              timestamp: 2000-01-23T04:56:07.000+00:00
          name: Project 23
          description: This is one of the projects that team 1 is working on.
          id: proj-1234
          timestamp: 2000-01-23T04:56:07.000+00:00
          status:
            reference: true
            outputs: true
            planning: true
            plan_error: true
            stale_plan: true
            sources: true
            plan: true
        inputs:
          key:
            name: name
            description: description
            normalized_name: normalized_name
            id: id
            type: type
            timestamp: 2000-01-23T04:56:07.000+00:00
        name: Team 1 Workspace
        description: This is the workspace for all the projects of team 1.
        id: work-1234
        project_ids:
        - project_ids
        - project_ids
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: A unique ID for the workspace.
          example: work-1234
          type: object
        name:
          description: A human readable name for the workspace.
          example: Team 1 Workspace
          type: string
        timestamp:
          format: date-time
          type: string
        project_ids:
          items:
            type: string
          type: array
        inputs:
          additionalProperties:
            $ref: '#/components/schemas/Project_inputs_value'
          type: object
        description:
          description: A description about the workspace.
          example: This is the workspace for all the projects of team 1.
          type: string
        projects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
      required:
      - id
      - name
      type: object
    Resource:
      description: A resource is a URL path.
      example: /workspaces/work-1234/projects/proj-42
      type: string
    Role:
      example:
        name: Team 1
        description: A member of team 1.
        rules:
        - resources:
          - /workspaces/work-7/.+
          - /workspaces/work-42/projects/.*
          - /workspaces/work-123/projects/proj-2
          verbs:
          - all
        - resources:
          - /workspaces/work-1234
          verbs:
          - create-project
          - delete-project
        id: team-1
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: A unique ID for the role.
          example: team-1
          type: object
        name:
          description: A human readable name for the role.
          example: Team 1
          type: string
        description:
          description: A description about the role
          example: A member of team 1.
          type: string
        rules:
          description: |
            The list of rules to apply for this role.
          example:
          - resources:
            - /workspaces/work-7/.+
            - /workspaces/work-42/projects/.*
            - /workspaces/work-123/projects/proj-2
            verbs:
            - all
          - resources:
            - /workspaces/work-1234
            verbs:
            - create-project
            - delete-project
          items:
            $ref: '#/components/schemas/Role_rules_inner'
          type: array
      required:
      - id
      - name
      type: object
    get_tokens_request:
      properties:
        grant_type:
          enum:
          - client_credentials
          type: string
      required:
      - grant_type
      type: object
    get_tokens_200_response:
      example:
        access_token: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
        token_type: example
        expires_in: 3600
      properties:
        access_token:
          example: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
          type: string
        token_type:
          example: example
          type: string
        expires_in:
          example: 3600
          type: number
      type: object
    get_support_info_200_response:
      example:
        cli_version: |-
          version: v0.3.0+unreleased
          gitCommit: 0ccc6c4c6ea8ccd8fb8f999d37f81cdf0fdf22e6
          gitTreeState: clean
          goVersion: go1.18.1
          platform: darwin/amd64
        ui_version: unknown
        api_version: |-
          version: v0.1.0+unreleased
          gitCommit: d21d2503e136fd85d5b166d5899d4058083cf0ce
          gitTreeState: clean
          goVersion: go1.18.1
          platform: darwin/amd64
        docker: docker socket is not mounted
      properties:
        cli_version:
          description: "The version, commit hash, etc. of the Move2Kube CLI tool being\
            \ used."
          example: |-
            version: v0.3.0+unreleased
            gitCommit: 0ccc6c4c6ea8ccd8fb8f999d37f81cdf0fdf22e6
            gitTreeState: clean
            goVersion: go1.18.1
            platform: darwin/amd64
          type: string
        api_version:
          description: "The version, commit hash, etc. of the Move2Kube API server\
            \ being used."
          example: |-
            version: v0.1.0+unreleased
            gitCommit: d21d2503e136fd85d5b166d5899d4058083cf0ce
            gitTreeState: clean
            goVersion: go1.18.1
            platform: darwin/amd64
          type: string
        ui_version:
          description: "The version, commit hash, etc. of the Move2Kube UI website\
            \ being used."
          example: unknown
          type: string
        docker:
          description: Whether the docker socket '/var/run/docker.sock' is mounted
            when running as a container.
          example: docker socket is not mounted
          type: string
      type: object
    create_workspace_201_response:
      example:
        id: work-1234
      properties:
        id:
          description: ID of the new workspace.
          example: work-1234
          type: string
      type: object
    create_workspace_input_request:
      properties:
        type:
          description: The type of the input.
          enum:
          - sources
          - customizations
          - configs
          type: string
        description:
          description: A description for the input.
          type: string
        file:
          description: The actual content of the input file.
          format: binary
          type: string
      type: object
    create_workspace_input_201_response:
      example:
        id: work-input-1234
      properties:
        id:
          description: ID of the new workspace input.
          example: work-input-1234
          type: string
      type: object
    create_project_201_response:
      example:
        id: proj-1234
      properties:
        id:
          description: ID of the new project.
          example: proj-1234
          type: string
      type: object
    create_project_input_request:
      properties:
        type:
          description: The type of the input.
          enum:
          - sources
          - customizations
          - configs
          - reference
          type: string
        id:
          description: "If the input is of type 'reference', then this field indicates\
            \ the id of the workspace input that it is referencing."
          type: string
        description:
          description: A description for the input.
          type: string
        file:
          description: The actual content of the input file.
          format: binary
          type: string
      type: object
    create_project_input_201_response:
      example:
        id: proj-input-1234
      properties:
        id:
          description: ID of the new project input.
          example: proj-input-1234
          type: string
      type: object
    get_plan_200_response:
      example:
        plan: plan
      properties:
        plan:
          description: The plan file in YAML format.
          type: string
      type: object
    update_plan_request:
      properties:
        plan:
          description: The new plan file to use for this project.
          type: string
      type: object
    start_transformation_request:
      properties:
        plan:
          description: A plan to use for the transformation. (Not required).
          type: string
      type: object
    start_transformation_202_response:
      example:
        name: name
        description: description
        id: proj-output-1234
        timestamp: 2000-01-23T04:56:07.000+00:00
        status: transforming
      properties:
        id:
          description: ID of the new project output.
          example: proj-output-1234
          type: string
        name:
          description: Name of the project output.
          type: string
        description:
          description: Description of the project output.
          type: string
        timestamp:
          format: date-time
          type: string
        status:
          description: The status of the transformation.
          enum:
          - transforming
          - done
          - error
          type: string
      type: object
    get_current_question_200_response:
      example:
        question: question
      properties:
        question:
          description: A JSON encoded string of the question object.
          type: string
      type: object
    post_answer_to_question_request:
      properties:
        solution:
          description: A JSON encoded string containing the answer object.
          type: string
      type: object
    create_role_201_response:
      example:
        id: role-1234
      properties:
        id:
          description: ID of the new role.
          example: role-1234
          type: string
      type: object
    Error_error:
      properties:
        description:
          description: A human readable error message.
          example: "failed to create the workspace. Error: ..."
          type: string
      required:
      - description
      type: object
    Project_outputs_value:
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timestamp: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        timestamp:
          format: date-time
          type: string
        status:
          type: string
      type: object
    Project_status:
      example:
        reference: true
        outputs: true
        planning: true
        plan_error: true
        stale_plan: true
        sources: true
        plan: true
      properties:
        plan:
          type: boolean
        plan_error:
          type: boolean
        planning:
          type: boolean
        reference:
          type: boolean
        stale_plan:
          type: boolean
        sources:
          type: boolean
        outputs:
          type: boolean
      type: object
    Project_inputs_value:
      example:
        name: name
        description: description
        normalized_name: normalized_name
        id: id
        type: type
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        timestamp:
          format: date-time
          type: string
        type:
          type: string
        normalized_name:
          type: string
      type: object
    Role_rules_inner:
      description: A rule is a list of resources and the list of allowed verbs for
        those resources.
      properties:
        resources:
          description: |
            List of resources. The elements of this list are Javascript ES6 Regex patterns.
            When a request for a protected resource is received these regexs are used to
            match against the resource URL.
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        verbs:
          description: "List of allowed verbs.  \nFor now the only supported verb\
            \ is `all` which allows all actions on the resource.\n"
          items:
            example: all
            type: string
          type: array
      required:
      - resources
      - verbs
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      scheme: bearer
      type: http

