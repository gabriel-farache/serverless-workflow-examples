kogito.service.url=${kubernetes:services.v1/BasicExample}
quarkus.log.category."io.smallrye.reactive.messaging".level = DEBUG
quarkus.log.category."org.kie".level = DEBUG
quarkus.log.category."io.quarkus.reactivemessaging".level = DEBUG
quarkus.log.category."io.vertx".level = DEBUG
quarkus.datasource.jdbc.url=jdbc:postgresql://postgres-db-service.postgres:5432/sonataflow
quarkus.datasource.username=sonataflow
quarkus.datasource.password=sonataflow
kogito.jobs-service.url=${kubernetes:services.v1/jobs-service-service}
# Job Service kogito-addons-quarkus-jobs-knative-eventing configuration
mp.messaging.outgoing.kogito-job-service-job-request-events.connector=quarkus-http
mp.messaging.outgoing.kogito-job-service-job-request-events.url=http://jobs-service-service/v2/jobs/events
# Data Index configuration
mp.messaging.outgoing.kogito-processinstances-events.url=http://data-index-service/processes
mp.messaging.outgoing.kogito-processinstances-events.connector=quarkus-http
mp.messaging.outgoing.kogito-usertaskinstances-events.url=http://data-index-service/tasks
mp.messaging.outgoing.kogito-usertaskinstances-events.connector=quarkus-http
mp.messaging.outgoing.kogito-variables-events.url=http://data-index-service/variables
mp.messaging.outgoing.kogito-variables-events.connector=quarkus-http

# Skip user tasks and variables events sending.
kogito.events.usertasks.enabled=false
kogito.events.variables.enabled=false

# OIDC Configuration
quarkus.oidc.auth-server-url=http://keycloak:8080/realms/Orchestrator
quarkus.oidc.client-id=swf
quarkus.oidc.credentials.secret=Kax5TAVc5zKu7L6RaYpHtBr7p7QyQdHW
quarkus.oidc.tls.verification=none

quarkus.http.auth.policy.role-policy1.roles-allowed=user
quarkus.http.auth.permission.roles1.paths=/*
quarkus.http.auth.permission.roles1.policy=role-policy1

# Enable Policy Enforcement
quarkus.keycloak.policy-enforcer.enable=true

quarkus.datasource.db-kind=postgresql

quarkus.container-image.build=true
#quarkus.container-image.registry=dev.local
quarkus.container-image.group=gfarache
quarkus.container-image.name=swf-test
quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.image-pull-policy=always
quarkus.kubernetes.labels.data-index-access=true

#Optional push to a registry
quarkus.container-image.registry=quay.io
quarkus.container-image.push=true